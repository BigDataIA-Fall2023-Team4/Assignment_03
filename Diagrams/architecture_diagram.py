# -*- coding: utf-8 -*-
"""Architecture Diagram

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DMaubIpewB4xhF6Nb9KIqa43ETZV0Nbu
"""

!pip install diagrams

from diagrams import Diagram, Cluster, Edge
from diagrams.onprem.workflow import Airflow
from diagrams.onprem.client import User
from diagrams.gcp.compute import ComputeEngine
from diagrams.gcp.database import SQL
from diagrams.gcp.storage import Storage
from diagrams.custom import Custom
from diagrams.onprem.container import Docker

graph_attr = {
    "fontsize": "20"
}

with Diagram("QA Bot", show=False, direction="LR", graph_attr=graph_attr) as diag:
  # user = User("User")
  # airflow = Airflow("User triggers\nAirflow pipeline")
  # airflow1 = Airflow("User triggers\nAirflow pipeline")
  # gcs1 = Storage("Storage\nin GCS")
  # gcs2 = Storage("Storage\nin GCS")
  # gcsql = SQL("Validate User\nin SQL")
  # streamlit_log = Custom("User\nLogin/Signup", "/content/streamlit logo.png")
  # qa_in_streamlit = Custom("Streamlit\nQ/A Bot", "/content/streamlit logo.png")
  # ans_in_streamlit = Custom("Streamlit\nDisplay Answer", "/content/streamlit logo.png")
  # colab = Custom("Google Colab\nGPU Computation", "/content/colab_logo.png")
  # nougat = Custom("Nougat\nExtraction", "/content/nougat_logo.png")
  # pypdf = Custom("Pypdf\nExtraction", "/content/pypdf.png")
  # localtunnel = Custom("Local\nTunnel", "/content/localtunnel.png")
  # OpenAI_emb = Custom("Generate\nEmbeddings", "/content/openai.png")
  # OpenAI_qa = Custom("Answer Question", "/content/openai.png")
  # pinecone_ins = Custom("Vectors\nInserted", "/content/pinecone.png")
  # pinecone_query = Custom("Query\nVectors", "/content/pinecone.png")

  with Cluster("GCP VM Instance") as vm:
    with Cluster("Docker Airflow Container") as airflow:
      with Cluster("Pipeline 1") as pipe1:
        airflow = Airflow("User triggers\nAirflow pipeline")
        gcs1 = Storage("Storage\nin GCS")
        colab = Custom("Google Colab\nGPU Computation", "/content/colab_logo.png")
        nougat = Custom("Nougat\nExtraction", "/content/nougat_logo.png")
        pypdf = Custom("Pypdf\nExtraction", "/content/pypdf.png")
        localtunnel = Custom("Local\nTunnel", "/content/localtunnel.png")
        OpenAI_emb = Custom("Generate\nEmbeddings", "/content/embeddings.png")

      with Cluster("Pipeline 2") as pipe2:
        airflow1 = Airflow("User triggers\nAirflow pipeline")
        gcs2 = Storage("Storage\nin GCS")
        pinecone_ins = Custom("Vectors\nInserted", "/content/pinecone.png")

    with Cluster("Docker Streamlit Container") as streamlit:
      with Cluster("User Interface"):
        user = User("User")
        streamlit_log = Custom("User\nLogin/Signup", "/content/streamlit logo.png")
        qa_in_streamlit = Custom("Streamlit\nQ/A Bot", "/content/streamlit logo.png")
        gcsql = SQL("Validate User\nin SQL")
        pinecone_query = Custom("Query\nVectors", "/content/pinecone.png")
        OpenAI_qa = Custom("Answer Question", "/content/openai.png")
        ans_in_streamlit = Custom("Streamlit\nDisplay Answer", "/content/streamlit logo.png")

  airflow >> pypdf >> OpenAI_emb >> gcs1
  airflow >> localtunnel >> colab >> nougat >> OpenAI_emb >> gcs1
  airflow1 >> gcs2 >> pinecone_ins
  user >> streamlit_log >> gcsql >> qa_in_streamlit >> pinecone_query >> OpenAI_qa >> ans_in_streamlit

diag

